<%- include("header.ejs") %>
<link rel="stylesheet" href="/css/index.css">
<div class="container">

    <div class="header">
        <h1 style="margin: 0;">PictoRoom!</h1>
        <small>By <a href="https://poyoweb.org">Poyo</a>!</small>
    </div>

    <form action="/joinRoom" method="POST">
        <div class="form-group">
            <label for="username">Username</label>
            <input type="text" id="username" name="username" required>
        </div>
        <div class="form-group">
            <label for="room">Room Code (invent one for generating a room)</label>
            <input type="text" id="room" name="room" required>
        </div>
        <button type="submit" class="btn">Enter/Create room</button>
    </form>

    <h2>Rooms</h2>
    <div id="roomStats">
        <p>Loading room statistics...</p>
    </div>
</div>

<script>
    const roomStatsDiv = document.getElementById('roomStats');

    // Fetch and display room statistics
    const fetchRoomStats = async () => {
        try {
            const res = await fetch('/stats');
            const stats = await res.json();

            // Update room statistics dynamically
            roomStatsDiv.innerHTML = `
                <p>Total Users in App: ${stats.totalUsers}</p>
                ${stats.rooms
                    .map(
                        room => `
                    <a href="/joinRoom?next=${room.roomName}">
                        <div class="room">
                            <strong>Room Name:</strong> ${room.roomName}<br>
                            <strong>Users:</strong> ${room.users.map(user => user.username).join(', ')}<br>
                            <strong>Capacity:</strong> ${room.userCount} / ${room.maxUsers}
                        </div>
                    </a>
                        `
                    )
                    .join('')}
            `;
        } catch (error) {
            console.error('Failed to fetch room stats:', error);
            roomStatsDiv.innerHTML = `<p>Error loading statistics.</p>`;
        }
    };

    // Refresh room stats every 5 seconds
    setInterval(fetchRoomStats, 5000);

    // Fetch immediately on page load
    fetchRoomStats();
</script>
<%- include("footer.ejs") %>
